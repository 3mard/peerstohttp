# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}/src
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v ./...
      - run: go get -v github.com/anacrolix/utp
      - run:
          name: Creating Artifacts
          command: |
            mkdir /tmp/artifacts;
      - run: GOOS=windows GOARCH=386 go build -o /tmp/artifacts/Go-PeersToHttp.Windows.i386.exe ./...
      - run: GOOS=linux GOARCH=386 go build -o /tmp/artifacts/Go-PeersToHttp.Linux.i386 ./...
      - run: GOOS=linux GOARCH=amd64 go build -o /tmp/artifacts/Go-PeersToHttp.Linux.amd64 ./...
      - run: GOOS=linux GOARCH=arm GOARM=6 go build -o /tmp/artifacts/Go-PeersToHttp.Linux.arm6 ./...
      - run: GOOS=linux GOARCH=arm GOARM=7 go build -o /tmp/artifacts/Go-PeersToHttp.Linux.arm7 ./...
      - run: go test -v ./...
      - store_artifacts:
          path: /tmp/artifacts